[DEFAULT]
state_path = /var/lib/watcher
{{ if (index . "TransportURL") }}
transport_url = {{ .TransportURL }}
{{ end }}
control_exchange = watcher
debug = True
{{ if (index . "LogFile") }}
log_file = {{ .LogFile }}
{{ end }}
# empty notification_level means that no notification will be sent
notification_level =

[database]
connection = {{ .DatabaseConnection }}

[oslo_policy]
policy_file = /etc/watcher/policy.yaml.sample

[oslo_messaging_notifications]
{{ if (index . "NotificationURL") }}
driver = messagingv2
transport_url = {{ .NotificationURL }}
{{ else }}
driver = noop
{{ end }}

[oslo_messaging_rabbit]
{{- if (index . "QuorumQueues") }}
rabbit_quorum_queue=true
rabbit_transient_quorum_queue=true
amqp_durable_queues=true
{{- else }}
amqp_durable_queues=false
amqp_auto_delete=false
heartbeat_in_pthread=false
{{- end }}

{{ if (index . "KeystoneAuthURL") }}
[keystone_authtoken]
{{ if (index . "MemcachedServers") }}
memcached_servers={{ .MemcachedServers }}
{{ end }}
{{ if (index . "MemcachedAuthCert") }}
tls_enabled=true
memcache_tls_certfile = {{ .MemcachedAuthCert }}
memcache_tls_keyfile = {{ .MemcachedAuthKey }}
memcache_tls_cafile = {{ .MemcachedAuthCa }}
memcache_tls_enabled = true
{{ end }}
project_domain_name = Default
project_name = service
user_domain_name = Default
password = {{ .ServicePassword }}
username = {{ .ServiceUser }}
auth_url = {{ .KeystoneAuthURL }}
interface = internal
auth_type = password
{{ if .CaFilePath }}
cafile = {{ .CaFilePath }}
{{ end }}
{{ end }}

{{ if (index . "KeystoneAuthURL") }}
[watcher_clients_auth]
project_domain_name = Default
project_name = service
user_domain_name = Default
password = {{ .ServicePassword }}
username = {{ .ServiceUser }}
auth_url = {{ .KeystoneAuthURL }}
interface = internal
auth_type = password
{{ if .CaFilePath }}
cafile = {{ .CaFilePath }}
{{ end }}
{{ end }}


[oslo_concurrency]
lock_path = /var/lib/watcher/tmp

[watcher_datasources]
datasources = prometheus

{{ if (index . "MemcachedServers") }}
[cache]
{{ if .MemcachedTLS }}
backend = oslo_cache.memcache_pool
memcache_servers={{ .MemcachedServers }}
memcache_socket_timeout = 0.5
memcache_pool_connection_get_timeout = 1
{{ else }}
backend = dogpile.cache.memcached
memcache_servers={{ .MemcachedServersWithInet }}
{{ end }}
enabled=true
tls_enabled={{ .MemcachedTLS }}
{{ if (index . "MemcachedAuthCert") }}
tls_certfile={{ .MemcachedAuthCert }}
tls_keyfile={{ .MemcachedAuthKey }}
tls_cafile={{ .MemcachedAuthCa }}
{{ end }}
memcache_dead_retry = 30
{{ end }}

{{ if (index . "PrometheusHost") }}
[prometheus_client]
host = {{ .PrometheusHost }}
port = {{ .PrometheusPort }}
{{ if (index . "PrometheusCaCertPath") }}
cafile = {{ .PrometheusCaCertPath }}
{{ end }}
{{ end }}

[cinder_client]
endpoint_type = internal

[glance_client]
endpoint_type = internal

[ironic_client]
endpoint_type = internal

[keystone_client]
interface = internal

[neutron_client]
endpoint_type = internal

[nova_client]
endpoint_type = internal

[placement_client]
interface = internal

[watcher_cluster_data_model_collectors.compute]
period = 900

[watcher_cluster_data_model_collectors.baremetal]
period = 900

[watcher_cluster_data_model_collectors.storage]
period = 900
